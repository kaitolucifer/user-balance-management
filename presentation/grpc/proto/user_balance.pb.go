// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.2
// source: proto/user_balance.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetUserBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *GetUserBalanceRequest) Reset() {
	*x = GetUserBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_balance_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalanceRequest) ProtoMessage() {}

func (x *GetUserBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_balance_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetUserBalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_balance_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserBalanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type GetUserBalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance int32 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *GetUserBalanceResponse) Reset() {
	*x = GetUserBalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_balance_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserBalanceResponse) ProtoMessage() {}

func (x *GetUserBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_balance_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetUserBalanceResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_balance_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserBalanceResponse) GetBalance() int32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type ChangeUserBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TransactionId string `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Amount        int32  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *ChangeUserBalanceRequest) Reset() {
	*x = ChangeUserBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_balance_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeUserBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeUserBalanceRequest) ProtoMessage() {}

func (x *ChangeUserBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_balance_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeUserBalanceRequest.ProtoReflect.Descriptor instead.
func (*ChangeUserBalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_balance_proto_rawDescGZIP(), []int{2}
}

func (x *ChangeUserBalanceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ChangeUserBalanceRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ChangeUserBalanceRequest) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type AddAllUserBalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	Amount        int32  `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *AddAllUserBalanceRequest) Reset() {
	*x = AddAllUserBalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_balance_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddAllUserBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddAllUserBalanceRequest) ProtoMessage() {}

func (x *AddAllUserBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_balance_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddAllUserBalanceRequest.ProtoReflect.Descriptor instead.
func (*AddAllUserBalanceRequest) Descriptor() ([]byte, []int) {
	return file_proto_user_balance_proto_rawDescGZIP(), []int{3}
}

func (x *AddAllUserBalanceRequest) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *AddAllUserBalanceRequest) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type EmptyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_user_balance_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_user_balance_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_proto_user_balance_proto_rawDescGZIP(), []int{4}
}

var File_proto_user_balance_proto protoreflect.FileDescriptor

var file_proto_user_balance_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x30, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x72,
	0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x59, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x0f, 0x0a,
	0x0d, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xac,
	0x02, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x61,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5e, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x26, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x5a, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x64, 0x64, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x08, 0x5a,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_user_balance_proto_rawDescOnce sync.Once
	file_proto_user_balance_proto_rawDescData = file_proto_user_balance_proto_rawDesc
)

func file_proto_user_balance_proto_rawDescGZIP() []byte {
	file_proto_user_balance_proto_rawDescOnce.Do(func() {
		file_proto_user_balance_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_user_balance_proto_rawDescData)
	})
	return file_proto_user_balance_proto_rawDescData
}

var file_proto_user_balance_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_user_balance_proto_goTypes = []interface{}{
	(*GetUserBalanceRequest)(nil),    // 0: user_balance.GetUserBalanceRequest
	(*GetUserBalanceResponse)(nil),   // 1: user_balance.GetUserBalanceResponse
	(*ChangeUserBalanceRequest)(nil), // 2: user_balance.ChangeUserBalanceRequest
	(*AddAllUserBalanceRequest)(nil), // 3: user_balance.AddAllUserBalanceRequest
	(*EmptyResponse)(nil),            // 4: user_balance.EmptyResponse
}
var file_proto_user_balance_proto_depIdxs = []int32{
	0, // 0: user_balance.UserBalance.GetBalanceByUserID:input_type -> user_balance.GetUserBalanceRequest
	2, // 1: user_balance.UserBalance.ChangeBalanceByUserID:input_type -> user_balance.ChangeUserBalanceRequest
	3, // 2: user_balance.UserBalance.AddAllUserBalance:input_type -> user_balance.AddAllUserBalanceRequest
	1, // 3: user_balance.UserBalance.GetBalanceByUserID:output_type -> user_balance.GetUserBalanceResponse
	4, // 4: user_balance.UserBalance.ChangeBalanceByUserID:output_type -> user_balance.EmptyResponse
	4, // 5: user_balance.UserBalance.AddAllUserBalance:output_type -> user_balance.EmptyResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_user_balance_proto_init() }
func file_proto_user_balance_proto_init() {
	if File_proto_user_balance_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_user_balance_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_balance_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserBalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_balance_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeUserBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_balance_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddAllUserBalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_user_balance_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_user_balance_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_user_balance_proto_goTypes,
		DependencyIndexes: file_proto_user_balance_proto_depIdxs,
		MessageInfos:      file_proto_user_balance_proto_msgTypes,
	}.Build()
	File_proto_user_balance_proto = out.File
	file_proto_user_balance_proto_rawDesc = nil
	file_proto_user_balance_proto_goTypes = nil
	file_proto_user_balance_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserBalanceClient is the client API for UserBalance service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserBalanceClient interface {
	GetBalanceByUserID(ctx context.Context, in *GetUserBalanceRequest, opts ...grpc.CallOption) (*GetUserBalanceResponse, error)
	ChangeBalanceByUserID(ctx context.Context, in *ChangeUserBalanceRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
	AddAllUserBalance(ctx context.Context, in *AddAllUserBalanceRequest, opts ...grpc.CallOption) (*EmptyResponse, error)
}

type userBalanceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserBalanceClient(cc grpc.ClientConnInterface) UserBalanceClient {
	return &userBalanceClient{cc}
}

func (c *userBalanceClient) GetBalanceByUserID(ctx context.Context, in *GetUserBalanceRequest, opts ...grpc.CallOption) (*GetUserBalanceResponse, error) {
	out := new(GetUserBalanceResponse)
	err := c.cc.Invoke(ctx, "/user_balance.UserBalance/GetBalanceByUserID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userBalanceClient) ChangeBalanceByUserID(ctx context.Context, in *ChangeUserBalanceRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/user_balance.UserBalance/ChangeBalanceByUserID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userBalanceClient) AddAllUserBalance(ctx context.Context, in *AddAllUserBalanceRequest, opts ...grpc.CallOption) (*EmptyResponse, error) {
	out := new(EmptyResponse)
	err := c.cc.Invoke(ctx, "/user_balance.UserBalance/AddAllUserBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserBalanceServer is the server API for UserBalance service.
type UserBalanceServer interface {
	GetBalanceByUserID(context.Context, *GetUserBalanceRequest) (*GetUserBalanceResponse, error)
	ChangeBalanceByUserID(context.Context, *ChangeUserBalanceRequest) (*EmptyResponse, error)
	AddAllUserBalance(context.Context, *AddAllUserBalanceRequest) (*EmptyResponse, error)
}

// UnimplementedUserBalanceServer can be embedded to have forward compatible implementations.
type UnimplementedUserBalanceServer struct {
}

func (*UnimplementedUserBalanceServer) GetBalanceByUserID(context.Context, *GetUserBalanceRequest) (*GetUserBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBalanceByUserID not implemented")
}
func (*UnimplementedUserBalanceServer) ChangeBalanceByUserID(context.Context, *ChangeUserBalanceRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeBalanceByUserID not implemented")
}
func (*UnimplementedUserBalanceServer) AddAllUserBalance(context.Context, *AddAllUserBalanceRequest) (*EmptyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAllUserBalance not implemented")
}

func RegisterUserBalanceServer(s *grpc.Server, srv UserBalanceServer) {
	s.RegisterService(&_UserBalance_serviceDesc, srv)
}

func _UserBalance_GetBalanceByUserID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserBalanceServer).GetBalanceByUserID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_balance.UserBalance/GetBalanceByUserID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserBalanceServer).GetBalanceByUserID(ctx, req.(*GetUserBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserBalance_ChangeBalanceByUserID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeUserBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserBalanceServer).ChangeBalanceByUserID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_balance.UserBalance/ChangeBalanceByUserID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserBalanceServer).ChangeBalanceByUserID(ctx, req.(*ChangeUserBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserBalance_AddAllUserBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAllUserBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserBalanceServer).AddAllUserBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user_balance.UserBalance/AddAllUserBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserBalanceServer).AddAllUserBalance(ctx, req.(*AddAllUserBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserBalance_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user_balance.UserBalance",
	HandlerType: (*UserBalanceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBalanceByUserID",
			Handler:    _UserBalance_GetBalanceByUserID_Handler,
		},
		{
			MethodName: "ChangeBalanceByUserID",
			Handler:    _UserBalance_ChangeBalanceByUserID_Handler,
		},
		{
			MethodName: "AddAllUserBalance",
			Handler:    _UserBalance_AddAllUserBalance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/user_balance.proto",
}
